/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TypesIndexRouteImport } from './routes/types/index'
import { Route as StrategyIndexRouteImport } from './routes/strategy/index'
import { Route as SpritesIndexRouteImport } from './routes/sprites/index'
import { Route as PokemonsIndexRouteImport } from './routes/pokemons/index'
import { Route as MovesIndexRouteImport } from './routes/moves/index'
import { Route as MiscellaneousIndexRouteImport } from './routes/miscellaneous/index'
import { Route as LocationsIndexRouteImport } from './routes/locations/index'
import { Route as ItemsIndexRouteImport } from './routes/items/index'
import { Route as CollectionIndexRouteImport } from './routes/collection/index'
import { Route as CardsIndexRouteImport } from './routes/cards/index'
import { Route as BerriesIndexRouteImport } from './routes/berries/index'
import { Route as AbilitiesIndexRouteImport } from './routes/abilities/index'
import { Route as TypesTypeRouteImport } from './routes/types/$type'
import { Route as SpritesSpriteRouteImport } from './routes/sprites/$sprite'
import { Route as PokemonsPokemonRouteImport } from './routes/pokemons/$pokemon'
import { Route as MovesMoveRouteImport } from './routes/moves/$move'
import { Route as MiscellaneousGrowthrateRouteImport } from './routes/miscellaneous/growthrate'
import { Route as MiscellaneousCatchratecalculatorRouteImport } from './routes/miscellaneous/catchratecalculator'
import { Route as LocationsLocationRouteImport } from './routes/locations/$location'
import { Route as ItemsItemRouteImport } from './routes/items/$item'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo/table'
import { Route as DemoStoreRouteImport } from './routes/demo/store'
import { Route as DemoOrpcTodoRouteImport } from './routes/demo/orpc-todo'
import { Route as DemoNeonRouteImport } from './routes/demo/neon'
import { Route as DemoDrizzleRouteImport } from './routes/demo/drizzle'
import { Route as DemoDbChatApiRouteImport } from './routes/demo/db-chat-api'
import { Route as DemoDbChatRouteImport } from './routes/demo/db-chat'
import { Route as DemoClerkRouteImport } from './routes/demo/clerk'
import { Route as BerriesBerryRouteImport } from './routes/berries/$berry'
import { Route as ApiSplatRouteImport } from './routes/api.$'
import { Route as AbilitiesAbilityRouteImport } from './routes/abilities/$ability'
import { Route as CardsTcgpIndexRouteImport } from './routes/cards/tcgp/index'
import { Route as CardsTcgIndexRouteImport } from './routes/cards/tcg/index'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo/start.api-request'
import { Route as DemoFormSimpleRouteImport } from './routes/demo/form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo/form.address'
import { Route as DemoApiTqTodosRouteImport } from './routes/demo/api.tq-todos'
import { Route as DemoApiNamesRouteImport } from './routes/demo/api.names'
import { Route as CardsTcgpCardRouteImport } from './routes/cards/tcgp/$card'
import { Route as CardsTcgCardRouteImport } from './routes/cards/tcg/$card'
import { Route as ApiRpcSplatRouteImport } from './routes/api.rpc.$'
import { Route as DemoStartSsrIndexRouteImport } from './routes/demo/start.ssr.index'
import { Route as DemoStartSsrSpaModeRouteImport } from './routes/demo/start.ssr.spa-mode'
import { Route as DemoStartSsrFullSsrRouteImport } from './routes/demo/start.ssr.full-ssr'
import { Route as DemoStartSsrDataOnlyRouteImport } from './routes/demo/start.ssr.data-only'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TypesIndexRoute = TypesIndexRouteImport.update({
  id: '/types/',
  path: '/types/',
  getParentRoute: () => rootRouteImport,
} as any)
const StrategyIndexRoute = StrategyIndexRouteImport.update({
  id: '/strategy/',
  path: '/strategy/',
  getParentRoute: () => rootRouteImport,
} as any)
const SpritesIndexRoute = SpritesIndexRouteImport.update({
  id: '/sprites/',
  path: '/sprites/',
  getParentRoute: () => rootRouteImport,
} as any)
const PokemonsIndexRoute = PokemonsIndexRouteImport.update({
  id: '/pokemons/',
  path: '/pokemons/',
  getParentRoute: () => rootRouteImport,
} as any)
const MovesIndexRoute = MovesIndexRouteImport.update({
  id: '/moves/',
  path: '/moves/',
  getParentRoute: () => rootRouteImport,
} as any)
const MiscellaneousIndexRoute = MiscellaneousIndexRouteImport.update({
  id: '/miscellaneous/',
  path: '/miscellaneous/',
  getParentRoute: () => rootRouteImport,
} as any)
const LocationsIndexRoute = LocationsIndexRouteImport.update({
  id: '/locations/',
  path: '/locations/',
  getParentRoute: () => rootRouteImport,
} as any)
const ItemsIndexRoute = ItemsIndexRouteImport.update({
  id: '/items/',
  path: '/items/',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionIndexRoute = CollectionIndexRouteImport.update({
  id: '/collection/',
  path: '/collection/',
  getParentRoute: () => rootRouteImport,
} as any)
const CardsIndexRoute = CardsIndexRouteImport.update({
  id: '/cards/',
  path: '/cards/',
  getParentRoute: () => rootRouteImport,
} as any)
const BerriesIndexRoute = BerriesIndexRouteImport.update({
  id: '/berries/',
  path: '/berries/',
  getParentRoute: () => rootRouteImport,
} as any)
const AbilitiesIndexRoute = AbilitiesIndexRouteImport.update({
  id: '/abilities/',
  path: '/abilities/',
  getParentRoute: () => rootRouteImport,
} as any)
const TypesTypeRoute = TypesTypeRouteImport.update({
  id: '/types/$type',
  path: '/types/$type',
  getParentRoute: () => rootRouteImport,
} as any)
const SpritesSpriteRoute = SpritesSpriteRouteImport.update({
  id: '/sprites/$sprite',
  path: '/sprites/$sprite',
  getParentRoute: () => rootRouteImport,
} as any)
const PokemonsPokemonRoute = PokemonsPokemonRouteImport.update({
  id: '/pokemons/$pokemon',
  path: '/pokemons/$pokemon',
  getParentRoute: () => rootRouteImport,
} as any)
const MovesMoveRoute = MovesMoveRouteImport.update({
  id: '/moves/$move',
  path: '/moves/$move',
  getParentRoute: () => rootRouteImport,
} as any)
const MiscellaneousGrowthrateRoute = MiscellaneousGrowthrateRouteImport.update({
  id: '/miscellaneous/growthrate',
  path: '/miscellaneous/growthrate',
  getParentRoute: () => rootRouteImport,
} as any)
const MiscellaneousCatchratecalculatorRoute =
  MiscellaneousCatchratecalculatorRouteImport.update({
    id: '/miscellaneous/catchratecalculator',
    path: '/miscellaneous/catchratecalculator',
    getParentRoute: () => rootRouteImport,
  } as any)
const LocationsLocationRoute = LocationsLocationRouteImport.update({
  id: '/locations/$location',
  path: '/locations/$location',
  getParentRoute: () => rootRouteImport,
} as any)
const ItemsItemRoute = ItemsItemRouteImport.update({
  id: '/items/$item',
  path: '/items/$item',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStoreRoute = DemoStoreRouteImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoOrpcTodoRoute = DemoOrpcTodoRouteImport.update({
  id: '/demo/orpc-todo',
  path: '/demo/orpc-todo',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoNeonRoute = DemoNeonRouteImport.update({
  id: '/demo/neon',
  path: '/demo/neon',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDrizzleRoute = DemoDrizzleRouteImport.update({
  id: '/demo/drizzle',
  path: '/demo/drizzle',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDbChatApiRoute = DemoDbChatApiRouteImport.update({
  id: '/demo/db-chat-api',
  path: '/demo/db-chat-api',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDbChatRoute = DemoDbChatRouteImport.update({
  id: '/demo/db-chat',
  path: '/demo/db-chat',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoClerkRoute = DemoClerkRouteImport.update({
  id: '/demo/clerk',
  path: '/demo/clerk',
  getParentRoute: () => rootRouteImport,
} as any)
const BerriesBerryRoute = BerriesBerryRouteImport.update({
  id: '/berries/$berry',
  path: '/berries/$berry',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSplatRoute = ApiSplatRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootRouteImport,
} as any)
const AbilitiesAbilityRoute = AbilitiesAbilityRouteImport.update({
  id: '/abilities/$ability',
  path: '/abilities/$ability',
  getParentRoute: () => rootRouteImport,
} as any)
const CardsTcgpIndexRoute = CardsTcgpIndexRouteImport.update({
  id: '/cards/tcgp/',
  path: '/cards/tcgp/',
  getParentRoute: () => rootRouteImport,
} as any)
const CardsTcgIndexRoute = CardsTcgIndexRouteImport.update({
  id: '/cards/tcg/',
  path: '/cards/tcg/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiTqTodosRoute = DemoApiTqTodosRouteImport.update({
  id: '/demo/api/tq-todos',
  path: '/demo/api/tq-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiNamesRoute = DemoApiNamesRouteImport.update({
  id: '/demo/api/names',
  path: '/demo/api/names',
  getParentRoute: () => rootRouteImport,
} as any)
const CardsTcgpCardRoute = CardsTcgpCardRouteImport.update({
  id: '/cards/tcgp/$card',
  path: '/cards/tcgp/$card',
  getParentRoute: () => rootRouteImport,
} as any)
const CardsTcgCardRoute = CardsTcgCardRouteImport.update({
  id: '/cards/tcg/$card',
  path: '/cards/tcg/$card',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiRpcSplatRoute = ApiRpcSplatRouteImport.update({
  id: '/api/rpc/$',
  path: '/api/rpc/$',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrIndexRoute = DemoStartSsrIndexRouteImport.update({
  id: '/demo/start/ssr/',
  path: '/demo/start/ssr/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrSpaModeRoute = DemoStartSsrSpaModeRouteImport.update({
  id: '/demo/start/ssr/spa-mode',
  path: '/demo/start/ssr/spa-mode',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrFullSsrRoute = DemoStartSsrFullSsrRouteImport.update({
  id: '/demo/start/ssr/full-ssr',
  path: '/demo/start/ssr/full-ssr',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrDataOnlyRoute = DemoStartSsrDataOnlyRouteImport.update({
  id: '/demo/start/ssr/data-only',
  path: '/demo/start/ssr/data-only',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/abilities/$ability': typeof AbilitiesAbilityRoute
  '/api/$': typeof ApiSplatRoute
  '/berries/$berry': typeof BerriesBerryRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/db-chat': typeof DemoDbChatRoute
  '/demo/db-chat-api': typeof DemoDbChatApiRoute
  '/demo/drizzle': typeof DemoDrizzleRoute
  '/demo/neon': typeof DemoNeonRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/items/$item': typeof ItemsItemRoute
  '/locations/$location': typeof LocationsLocationRoute
  '/miscellaneous/catchratecalculator': typeof MiscellaneousCatchratecalculatorRoute
  '/miscellaneous/growthrate': typeof MiscellaneousGrowthrateRoute
  '/moves/$move': typeof MovesMoveRoute
  '/pokemons/$pokemon': typeof PokemonsPokemonRoute
  '/sprites/$sprite': typeof SpritesSpriteRoute
  '/types/$type': typeof TypesTypeRoute
  '/abilities': typeof AbilitiesIndexRoute
  '/berries': typeof BerriesIndexRoute
  '/cards': typeof CardsIndexRoute
  '/collection': typeof CollectionIndexRoute
  '/items': typeof ItemsIndexRoute
  '/locations': typeof LocationsIndexRoute
  '/miscellaneous': typeof MiscellaneousIndexRoute
  '/moves': typeof MovesIndexRoute
  '/pokemons': typeof PokemonsIndexRoute
  '/sprites': typeof SpritesIndexRoute
  '/strategy': typeof StrategyIndexRoute
  '/types': typeof TypesIndexRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/cards/tcg/$card': typeof CardsTcgCardRoute
  '/cards/tcgp/$card': typeof CardsTcgpCardRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/cards/tcg': typeof CardsTcgIndexRoute
  '/cards/tcgp': typeof CardsTcgpIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/abilities/$ability': typeof AbilitiesAbilityRoute
  '/api/$': typeof ApiSplatRoute
  '/berries/$berry': typeof BerriesBerryRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/db-chat': typeof DemoDbChatRoute
  '/demo/db-chat-api': typeof DemoDbChatApiRoute
  '/demo/drizzle': typeof DemoDrizzleRoute
  '/demo/neon': typeof DemoNeonRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/items/$item': typeof ItemsItemRoute
  '/locations/$location': typeof LocationsLocationRoute
  '/miscellaneous/catchratecalculator': typeof MiscellaneousCatchratecalculatorRoute
  '/miscellaneous/growthrate': typeof MiscellaneousGrowthrateRoute
  '/moves/$move': typeof MovesMoveRoute
  '/pokemons/$pokemon': typeof PokemonsPokemonRoute
  '/sprites/$sprite': typeof SpritesSpriteRoute
  '/types/$type': typeof TypesTypeRoute
  '/abilities': typeof AbilitiesIndexRoute
  '/berries': typeof BerriesIndexRoute
  '/cards': typeof CardsIndexRoute
  '/collection': typeof CollectionIndexRoute
  '/items': typeof ItemsIndexRoute
  '/locations': typeof LocationsIndexRoute
  '/miscellaneous': typeof MiscellaneousIndexRoute
  '/moves': typeof MovesIndexRoute
  '/pokemons': typeof PokemonsIndexRoute
  '/sprites': typeof SpritesIndexRoute
  '/strategy': typeof StrategyIndexRoute
  '/types': typeof TypesIndexRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/cards/tcg/$card': typeof CardsTcgCardRoute
  '/cards/tcgp/$card': typeof CardsTcgpCardRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/cards/tcg': typeof CardsTcgIndexRoute
  '/cards/tcgp': typeof CardsTcgpIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/abilities/$ability': typeof AbilitiesAbilityRoute
  '/api/$': typeof ApiSplatRoute
  '/berries/$berry': typeof BerriesBerryRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/db-chat': typeof DemoDbChatRoute
  '/demo/db-chat-api': typeof DemoDbChatApiRoute
  '/demo/drizzle': typeof DemoDrizzleRoute
  '/demo/neon': typeof DemoNeonRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/items/$item': typeof ItemsItemRoute
  '/locations/$location': typeof LocationsLocationRoute
  '/miscellaneous/catchratecalculator': typeof MiscellaneousCatchratecalculatorRoute
  '/miscellaneous/growthrate': typeof MiscellaneousGrowthrateRoute
  '/moves/$move': typeof MovesMoveRoute
  '/pokemons/$pokemon': typeof PokemonsPokemonRoute
  '/sprites/$sprite': typeof SpritesSpriteRoute
  '/types/$type': typeof TypesTypeRoute
  '/abilities/': typeof AbilitiesIndexRoute
  '/berries/': typeof BerriesIndexRoute
  '/cards/': typeof CardsIndexRoute
  '/collection/': typeof CollectionIndexRoute
  '/items/': typeof ItemsIndexRoute
  '/locations/': typeof LocationsIndexRoute
  '/miscellaneous/': typeof MiscellaneousIndexRoute
  '/moves/': typeof MovesIndexRoute
  '/pokemons/': typeof PokemonsIndexRoute
  '/sprites/': typeof SpritesIndexRoute
  '/strategy/': typeof StrategyIndexRoute
  '/types/': typeof TypesIndexRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/cards/tcg/$card': typeof CardsTcgCardRoute
  '/cards/tcgp/$card': typeof CardsTcgpCardRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/cards/tcg/': typeof CardsTcgIndexRoute
  '/cards/tcgp/': typeof CardsTcgpIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr/': typeof DemoStartSsrIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/abilities/$ability'
    | '/api/$'
    | '/berries/$berry'
    | '/demo/clerk'
    | '/demo/db-chat'
    | '/demo/db-chat-api'
    | '/demo/drizzle'
    | '/demo/neon'
    | '/demo/orpc-todo'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/items/$item'
    | '/locations/$location'
    | '/miscellaneous/catchratecalculator'
    | '/miscellaneous/growthrate'
    | '/moves/$move'
    | '/pokemons/$pokemon'
    | '/sprites/$sprite'
    | '/types/$type'
    | '/abilities'
    | '/berries'
    | '/cards'
    | '/collection'
    | '/items'
    | '/locations'
    | '/miscellaneous'
    | '/moves'
    | '/pokemons'
    | '/sprites'
    | '/strategy'
    | '/types'
    | '/api/rpc/$'
    | '/cards/tcg/$card'
    | '/cards/tcgp/$card'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/cards/tcg'
    | '/cards/tcgp'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/abilities/$ability'
    | '/api/$'
    | '/berries/$berry'
    | '/demo/clerk'
    | '/demo/db-chat'
    | '/demo/db-chat-api'
    | '/demo/drizzle'
    | '/demo/neon'
    | '/demo/orpc-todo'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/items/$item'
    | '/locations/$location'
    | '/miscellaneous/catchratecalculator'
    | '/miscellaneous/growthrate'
    | '/moves/$move'
    | '/pokemons/$pokemon'
    | '/sprites/$sprite'
    | '/types/$type'
    | '/abilities'
    | '/berries'
    | '/cards'
    | '/collection'
    | '/items'
    | '/locations'
    | '/miscellaneous'
    | '/moves'
    | '/pokemons'
    | '/sprites'
    | '/strategy'
    | '/types'
    | '/api/rpc/$'
    | '/cards/tcg/$card'
    | '/cards/tcgp/$card'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/cards/tcg'
    | '/cards/tcgp'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  id:
    | '__root__'
    | '/'
    | '/abilities/$ability'
    | '/api/$'
    | '/berries/$berry'
    | '/demo/clerk'
    | '/demo/db-chat'
    | '/demo/db-chat-api'
    | '/demo/drizzle'
    | '/demo/neon'
    | '/demo/orpc-todo'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/items/$item'
    | '/locations/$location'
    | '/miscellaneous/catchratecalculator'
    | '/miscellaneous/growthrate'
    | '/moves/$move'
    | '/pokemons/$pokemon'
    | '/sprites/$sprite'
    | '/types/$type'
    | '/abilities/'
    | '/berries/'
    | '/cards/'
    | '/collection/'
    | '/items/'
    | '/locations/'
    | '/miscellaneous/'
    | '/moves/'
    | '/pokemons/'
    | '/sprites/'
    | '/strategy/'
    | '/types/'
    | '/api/rpc/$'
    | '/cards/tcg/$card'
    | '/cards/tcgp/$card'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/cards/tcg/'
    | '/cards/tcgp/'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AbilitiesAbilityRoute: typeof AbilitiesAbilityRoute
  ApiSplatRoute: typeof ApiSplatRoute
  BerriesBerryRoute: typeof BerriesBerryRoute
  DemoClerkRoute: typeof DemoClerkRoute
  DemoDbChatRoute: typeof DemoDbChatRoute
  DemoDbChatApiRoute: typeof DemoDbChatApiRoute
  DemoDrizzleRoute: typeof DemoDrizzleRoute
  DemoNeonRoute: typeof DemoNeonRoute
  DemoOrpcTodoRoute: typeof DemoOrpcTodoRoute
  DemoStoreRoute: typeof DemoStoreRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ItemsItemRoute: typeof ItemsItemRoute
  LocationsLocationRoute: typeof LocationsLocationRoute
  MiscellaneousCatchratecalculatorRoute: typeof MiscellaneousCatchratecalculatorRoute
  MiscellaneousGrowthrateRoute: typeof MiscellaneousGrowthrateRoute
  MovesMoveRoute: typeof MovesMoveRoute
  PokemonsPokemonRoute: typeof PokemonsPokemonRoute
  SpritesSpriteRoute: typeof SpritesSpriteRoute
  TypesTypeRoute: typeof TypesTypeRoute
  AbilitiesIndexRoute: typeof AbilitiesIndexRoute
  BerriesIndexRoute: typeof BerriesIndexRoute
  CardsIndexRoute: typeof CardsIndexRoute
  CollectionIndexRoute: typeof CollectionIndexRoute
  ItemsIndexRoute: typeof ItemsIndexRoute
  LocationsIndexRoute: typeof LocationsIndexRoute
  MiscellaneousIndexRoute: typeof MiscellaneousIndexRoute
  MovesIndexRoute: typeof MovesIndexRoute
  PokemonsIndexRoute: typeof PokemonsIndexRoute
  SpritesIndexRoute: typeof SpritesIndexRoute
  StrategyIndexRoute: typeof StrategyIndexRoute
  TypesIndexRoute: typeof TypesIndexRoute
  ApiRpcSplatRoute: typeof ApiRpcSplatRoute
  CardsTcgCardRoute: typeof CardsTcgCardRoute
  CardsTcgpCardRoute: typeof CardsTcgpCardRoute
  DemoApiNamesRoute: typeof DemoApiNamesRoute
  DemoApiTqTodosRoute: typeof DemoApiTqTodosRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
  CardsTcgIndexRoute: typeof CardsTcgIndexRoute
  CardsTcgpIndexRoute: typeof CardsTcgpIndexRoute
  DemoStartSsrDataOnlyRoute: typeof DemoStartSsrDataOnlyRoute
  DemoStartSsrFullSsrRoute: typeof DemoStartSsrFullSsrRoute
  DemoStartSsrSpaModeRoute: typeof DemoStartSsrSpaModeRoute
  DemoStartSsrIndexRoute: typeof DemoStartSsrIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/types/': {
      id: '/types/'
      path: '/types'
      fullPath: '/types'
      preLoaderRoute: typeof TypesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/strategy/': {
      id: '/strategy/'
      path: '/strategy'
      fullPath: '/strategy'
      preLoaderRoute: typeof StrategyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sprites/': {
      id: '/sprites/'
      path: '/sprites'
      fullPath: '/sprites'
      preLoaderRoute: typeof SpritesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokemons/': {
      id: '/pokemons/'
      path: '/pokemons'
      fullPath: '/pokemons'
      preLoaderRoute: typeof PokemonsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/moves/': {
      id: '/moves/'
      path: '/moves'
      fullPath: '/moves'
      preLoaderRoute: typeof MovesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/miscellaneous/': {
      id: '/miscellaneous/'
      path: '/miscellaneous'
      fullPath: '/miscellaneous'
      preLoaderRoute: typeof MiscellaneousIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/locations/': {
      id: '/locations/'
      path: '/locations'
      fullPath: '/locations'
      preLoaderRoute: typeof LocationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/items/': {
      id: '/items/'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof ItemsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collection/': {
      id: '/collection/'
      path: '/collection'
      fullPath: '/collection'
      preLoaderRoute: typeof CollectionIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cards/': {
      id: '/cards/'
      path: '/cards'
      fullPath: '/cards'
      preLoaderRoute: typeof CardsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/berries/': {
      id: '/berries/'
      path: '/berries'
      fullPath: '/berries'
      preLoaderRoute: typeof BerriesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/abilities/': {
      id: '/abilities/'
      path: '/abilities'
      fullPath: '/abilities'
      preLoaderRoute: typeof AbilitiesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/types/$type': {
      id: '/types/$type'
      path: '/types/$type'
      fullPath: '/types/$type'
      preLoaderRoute: typeof TypesTypeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sprites/$sprite': {
      id: '/sprites/$sprite'
      path: '/sprites/$sprite'
      fullPath: '/sprites/$sprite'
      preLoaderRoute: typeof SpritesSpriteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokemons/$pokemon': {
      id: '/pokemons/$pokemon'
      path: '/pokemons/$pokemon'
      fullPath: '/pokemons/$pokemon'
      preLoaderRoute: typeof PokemonsPokemonRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/moves/$move': {
      id: '/moves/$move'
      path: '/moves/$move'
      fullPath: '/moves/$move'
      preLoaderRoute: typeof MovesMoveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/miscellaneous/growthrate': {
      id: '/miscellaneous/growthrate'
      path: '/miscellaneous/growthrate'
      fullPath: '/miscellaneous/growthrate'
      preLoaderRoute: typeof MiscellaneousGrowthrateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/miscellaneous/catchratecalculator': {
      id: '/miscellaneous/catchratecalculator'
      path: '/miscellaneous/catchratecalculator'
      fullPath: '/miscellaneous/catchratecalculator'
      preLoaderRoute: typeof MiscellaneousCatchratecalculatorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/locations/$location': {
      id: '/locations/$location'
      path: '/locations/$location'
      fullPath: '/locations/$location'
      preLoaderRoute: typeof LocationsLocationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/items/$item': {
      id: '/items/$item'
      path: '/items/$item'
      fullPath: '/items/$item'
      preLoaderRoute: typeof ItemsItemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/orpc-todo': {
      id: '/demo/orpc-todo'
      path: '/demo/orpc-todo'
      fullPath: '/demo/orpc-todo'
      preLoaderRoute: typeof DemoOrpcTodoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/neon': {
      id: '/demo/neon'
      path: '/demo/neon'
      fullPath: '/demo/neon'
      preLoaderRoute: typeof DemoNeonRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/drizzle': {
      id: '/demo/drizzle'
      path: '/demo/drizzle'
      fullPath: '/demo/drizzle'
      preLoaderRoute: typeof DemoDrizzleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/db-chat-api': {
      id: '/demo/db-chat-api'
      path: '/demo/db-chat-api'
      fullPath: '/demo/db-chat-api'
      preLoaderRoute: typeof DemoDbChatApiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/db-chat': {
      id: '/demo/db-chat'
      path: '/demo/db-chat'
      fullPath: '/demo/db-chat'
      preLoaderRoute: typeof DemoDbChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/clerk': {
      id: '/demo/clerk'
      path: '/demo/clerk'
      fullPath: '/demo/clerk'
      preLoaderRoute: typeof DemoClerkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/berries/$berry': {
      id: '/berries/$berry'
      path: '/berries/$berry'
      fullPath: '/berries/$berry'
      preLoaderRoute: typeof BerriesBerryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/abilities/$ability': {
      id: '/abilities/$ability'
      path: '/abilities/$ability'
      fullPath: '/abilities/$ability'
      preLoaderRoute: typeof AbilitiesAbilityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cards/tcgp/': {
      id: '/cards/tcgp/'
      path: '/cards/tcgp'
      fullPath: '/cards/tcgp'
      preLoaderRoute: typeof CardsTcgpIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cards/tcg/': {
      id: '/cards/tcg/'
      path: '/cards/tcg'
      fullPath: '/cards/tcg'
      preLoaderRoute: typeof CardsTcgIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/tq-todos': {
      id: '/demo/api/tq-todos'
      path: '/demo/api/tq-todos'
      fullPath: '/demo/api/tq-todos'
      preLoaderRoute: typeof DemoApiTqTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/names': {
      id: '/demo/api/names'
      path: '/demo/api/names'
      fullPath: '/demo/api/names'
      preLoaderRoute: typeof DemoApiNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cards/tcgp/$card': {
      id: '/cards/tcgp/$card'
      path: '/cards/tcgp/$card'
      fullPath: '/cards/tcgp/$card'
      preLoaderRoute: typeof CardsTcgpCardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cards/tcg/$card': {
      id: '/cards/tcg/$card'
      path: '/cards/tcg/$card'
      fullPath: '/cards/tcg/$card'
      preLoaderRoute: typeof CardsTcgCardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/rpc/$': {
      id: '/api/rpc/$'
      path: '/api/rpc/$'
      fullPath: '/api/rpc/$'
      preLoaderRoute: typeof ApiRpcSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/': {
      id: '/demo/start/ssr/'
      path: '/demo/start/ssr'
      fullPath: '/demo/start/ssr'
      preLoaderRoute: typeof DemoStartSsrIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/spa-mode': {
      id: '/demo/start/ssr/spa-mode'
      path: '/demo/start/ssr/spa-mode'
      fullPath: '/demo/start/ssr/spa-mode'
      preLoaderRoute: typeof DemoStartSsrSpaModeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/full-ssr': {
      id: '/demo/start/ssr/full-ssr'
      path: '/demo/start/ssr/full-ssr'
      fullPath: '/demo/start/ssr/full-ssr'
      preLoaderRoute: typeof DemoStartSsrFullSsrRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/data-only': {
      id: '/demo/start/ssr/data-only'
      path: '/demo/start/ssr/data-only'
      fullPath: '/demo/start/ssr/data-only'
      preLoaderRoute: typeof DemoStartSsrDataOnlyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AbilitiesAbilityRoute: AbilitiesAbilityRoute,
  ApiSplatRoute: ApiSplatRoute,
  BerriesBerryRoute: BerriesBerryRoute,
  DemoClerkRoute: DemoClerkRoute,
  DemoDbChatRoute: DemoDbChatRoute,
  DemoDbChatApiRoute: DemoDbChatApiRoute,
  DemoDrizzleRoute: DemoDrizzleRoute,
  DemoNeonRoute: DemoNeonRoute,
  DemoOrpcTodoRoute: DemoOrpcTodoRoute,
  DemoStoreRoute: DemoStoreRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ItemsItemRoute: ItemsItemRoute,
  LocationsLocationRoute: LocationsLocationRoute,
  MiscellaneousCatchratecalculatorRoute: MiscellaneousCatchratecalculatorRoute,
  MiscellaneousGrowthrateRoute: MiscellaneousGrowthrateRoute,
  MovesMoveRoute: MovesMoveRoute,
  PokemonsPokemonRoute: PokemonsPokemonRoute,
  SpritesSpriteRoute: SpritesSpriteRoute,
  TypesTypeRoute: TypesTypeRoute,
  AbilitiesIndexRoute: AbilitiesIndexRoute,
  BerriesIndexRoute: BerriesIndexRoute,
  CardsIndexRoute: CardsIndexRoute,
  CollectionIndexRoute: CollectionIndexRoute,
  ItemsIndexRoute: ItemsIndexRoute,
  LocationsIndexRoute: LocationsIndexRoute,
  MiscellaneousIndexRoute: MiscellaneousIndexRoute,
  MovesIndexRoute: MovesIndexRoute,
  PokemonsIndexRoute: PokemonsIndexRoute,
  SpritesIndexRoute: SpritesIndexRoute,
  StrategyIndexRoute: StrategyIndexRoute,
  TypesIndexRoute: TypesIndexRoute,
  ApiRpcSplatRoute: ApiRpcSplatRoute,
  CardsTcgCardRoute: CardsTcgCardRoute,
  CardsTcgpCardRoute: CardsTcgpCardRoute,
  DemoApiNamesRoute: DemoApiNamesRoute,
  DemoApiTqTodosRoute: DemoApiTqTodosRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
  CardsTcgIndexRoute: CardsTcgIndexRoute,
  CardsTcgpIndexRoute: CardsTcgpIndexRoute,
  DemoStartSsrDataOnlyRoute: DemoStartSsrDataOnlyRoute,
  DemoStartSsrFullSsrRoute: DemoStartSsrFullSsrRoute,
  DemoStartSsrSpaModeRoute: DemoStartSsrSpaModeRoute,
  DemoStartSsrIndexRoute: DemoStartSsrIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
