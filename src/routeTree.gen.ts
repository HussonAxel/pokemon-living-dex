/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TypesIndexRouteImport } from './routes/types/index'
import { Route as PokemonsIndexRouteImport } from './routes/pokemons/index'
import { Route as MovesIndexRouteImport } from './routes/moves/index'
import { Route as ItemsIndexRouteImport } from './routes/items/index'
import { Route as AbilitiesIndexRouteImport } from './routes/abilities/index'
import { Route as TypesTypeRouteImport } from './routes/types/$type'
import { Route as PokemonsPokemonRouteImport } from './routes/pokemons/$pokemon'
import { Route as MovesMoveRouteImport } from './routes/moves/$move'
import { Route as ItemsItemRouteImport } from './routes/items/$item'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo/table'
import { Route as DemoStoreRouteImport } from './routes/demo/store'
import { Route as DemoOrpcTodoRouteImport } from './routes/demo/orpc-todo'
import { Route as DemoNeonRouteImport } from './routes/demo/neon'
import { Route as DemoDrizzleRouteImport } from './routes/demo/drizzle'
import { Route as DemoDbChatApiRouteImport } from './routes/demo/db-chat-api'
import { Route as DemoDbChatRouteImport } from './routes/demo/db-chat'
import { Route as DemoClerkRouteImport } from './routes/demo/clerk'
import { Route as CollectionGenerationRouteImport } from './routes/collection/$generation'
import { Route as ApiSplatRouteImport } from './routes/api.$'
import { Route as AbilitiesAbilityRouteImport } from './routes/abilities/$ability'
import { Route as TcgpCardsIndexRouteImport } from './routes/tcgp/cards/index'
import { Route as TcgCardsIndexRouteImport } from './routes/tcg/cards/index'
import { Route as TcgpCardsCardRouteImport } from './routes/tcgp/cards/$card'
import { Route as TcgCardsCardRouteImport } from './routes/tcg/cards/$card'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo/start.api-request'
import { Route as DemoFormSimpleRouteImport } from './routes/demo/form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo/form.address'
import { Route as DemoApiTqTodosRouteImport } from './routes/demo/api.tq-todos'
import { Route as DemoApiNamesRouteImport } from './routes/demo/api.names'
import { Route as ApiRpcSplatRouteImport } from './routes/api.rpc.$'
import { Route as DemoStartSsrIndexRouteImport } from './routes/demo/start.ssr.index'
import { Route as DemoStartSsrSpaModeRouteImport } from './routes/demo/start.ssr.spa-mode'
import { Route as DemoStartSsrFullSsrRouteImport } from './routes/demo/start.ssr.full-ssr'
import { Route as DemoStartSsrDataOnlyRouteImport } from './routes/demo/start.ssr.data-only'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TypesIndexRoute = TypesIndexRouteImport.update({
  id: '/types/',
  path: '/types/',
  getParentRoute: () => rootRouteImport,
} as any)
const PokemonsIndexRoute = PokemonsIndexRouteImport.update({
  id: '/pokemons/',
  path: '/pokemons/',
  getParentRoute: () => rootRouteImport,
} as any)
const MovesIndexRoute = MovesIndexRouteImport.update({
  id: '/moves/',
  path: '/moves/',
  getParentRoute: () => rootRouteImport,
} as any)
const ItemsIndexRoute = ItemsIndexRouteImport.update({
  id: '/items/',
  path: '/items/',
  getParentRoute: () => rootRouteImport,
} as any)
const AbilitiesIndexRoute = AbilitiesIndexRouteImport.update({
  id: '/abilities/',
  path: '/abilities/',
  getParentRoute: () => rootRouteImport,
} as any)
const TypesTypeRoute = TypesTypeRouteImport.update({
  id: '/types/$type',
  path: '/types/$type',
  getParentRoute: () => rootRouteImport,
} as any)
const PokemonsPokemonRoute = PokemonsPokemonRouteImport.update({
  id: '/pokemons/$pokemon',
  path: '/pokemons/$pokemon',
  getParentRoute: () => rootRouteImport,
} as any)
const MovesMoveRoute = MovesMoveRouteImport.update({
  id: '/moves/$move',
  path: '/moves/$move',
  getParentRoute: () => rootRouteImport,
} as any)
const ItemsItemRoute = ItemsItemRouteImport.update({
  id: '/items/$item',
  path: '/items/$item',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStoreRoute = DemoStoreRouteImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoOrpcTodoRoute = DemoOrpcTodoRouteImport.update({
  id: '/demo/orpc-todo',
  path: '/demo/orpc-todo',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoNeonRoute = DemoNeonRouteImport.update({
  id: '/demo/neon',
  path: '/demo/neon',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDrizzleRoute = DemoDrizzleRouteImport.update({
  id: '/demo/drizzle',
  path: '/demo/drizzle',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDbChatApiRoute = DemoDbChatApiRouteImport.update({
  id: '/demo/db-chat-api',
  path: '/demo/db-chat-api',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDbChatRoute = DemoDbChatRouteImport.update({
  id: '/demo/db-chat',
  path: '/demo/db-chat',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoClerkRoute = DemoClerkRouteImport.update({
  id: '/demo/clerk',
  path: '/demo/clerk',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionGenerationRoute = CollectionGenerationRouteImport.update({
  id: '/collection/$generation',
  path: '/collection/$generation',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSplatRoute = ApiSplatRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootRouteImport,
} as any)
const AbilitiesAbilityRoute = AbilitiesAbilityRouteImport.update({
  id: '/abilities/$ability',
  path: '/abilities/$ability',
  getParentRoute: () => rootRouteImport,
} as any)
const TcgpCardsIndexRoute = TcgpCardsIndexRouteImport.update({
  id: '/tcgp/cards/',
  path: '/tcgp/cards/',
  getParentRoute: () => rootRouteImport,
} as any)
const TcgCardsIndexRoute = TcgCardsIndexRouteImport.update({
  id: '/tcg/cards/',
  path: '/tcg/cards/',
  getParentRoute: () => rootRouteImport,
} as any)
const TcgpCardsCardRoute = TcgpCardsCardRouteImport.update({
  id: '/tcgp/cards/$card',
  path: '/tcgp/cards/$card',
  getParentRoute: () => rootRouteImport,
} as any)
const TcgCardsCardRoute = TcgCardsCardRouteImport.update({
  id: '/tcg/cards/$card',
  path: '/tcg/cards/$card',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiTqTodosRoute = DemoApiTqTodosRouteImport.update({
  id: '/demo/api/tq-todos',
  path: '/demo/api/tq-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiNamesRoute = DemoApiNamesRouteImport.update({
  id: '/demo/api/names',
  path: '/demo/api/names',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiRpcSplatRoute = ApiRpcSplatRouteImport.update({
  id: '/api/rpc/$',
  path: '/api/rpc/$',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrIndexRoute = DemoStartSsrIndexRouteImport.update({
  id: '/demo/start/ssr/',
  path: '/demo/start/ssr/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrSpaModeRoute = DemoStartSsrSpaModeRouteImport.update({
  id: '/demo/start/ssr/spa-mode',
  path: '/demo/start/ssr/spa-mode',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrFullSsrRoute = DemoStartSsrFullSsrRouteImport.update({
  id: '/demo/start/ssr/full-ssr',
  path: '/demo/start/ssr/full-ssr',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrDataOnlyRoute = DemoStartSsrDataOnlyRouteImport.update({
  id: '/demo/start/ssr/data-only',
  path: '/demo/start/ssr/data-only',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/abilities/$ability': typeof AbilitiesAbilityRoute
  '/api/$': typeof ApiSplatRoute
  '/collection/$generation': typeof CollectionGenerationRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/db-chat': typeof DemoDbChatRoute
  '/demo/db-chat-api': typeof DemoDbChatApiRoute
  '/demo/drizzle': typeof DemoDrizzleRoute
  '/demo/neon': typeof DemoNeonRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/items/$item': typeof ItemsItemRoute
  '/moves/$move': typeof MovesMoveRoute
  '/pokemons/$pokemon': typeof PokemonsPokemonRoute
  '/types/$type': typeof TypesTypeRoute
  '/abilities': typeof AbilitiesIndexRoute
  '/items': typeof ItemsIndexRoute
  '/moves': typeof MovesIndexRoute
  '/pokemons': typeof PokemonsIndexRoute
  '/types': typeof TypesIndexRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/tcg/cards/$card': typeof TcgCardsCardRoute
  '/tcgp/cards/$card': typeof TcgpCardsCardRoute
  '/tcg/cards': typeof TcgCardsIndexRoute
  '/tcgp/cards': typeof TcgpCardsIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/abilities/$ability': typeof AbilitiesAbilityRoute
  '/api/$': typeof ApiSplatRoute
  '/collection/$generation': typeof CollectionGenerationRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/db-chat': typeof DemoDbChatRoute
  '/demo/db-chat-api': typeof DemoDbChatApiRoute
  '/demo/drizzle': typeof DemoDrizzleRoute
  '/demo/neon': typeof DemoNeonRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/items/$item': typeof ItemsItemRoute
  '/moves/$move': typeof MovesMoveRoute
  '/pokemons/$pokemon': typeof PokemonsPokemonRoute
  '/types/$type': typeof TypesTypeRoute
  '/abilities': typeof AbilitiesIndexRoute
  '/items': typeof ItemsIndexRoute
  '/moves': typeof MovesIndexRoute
  '/pokemons': typeof PokemonsIndexRoute
  '/types': typeof TypesIndexRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/tcg/cards/$card': typeof TcgCardsCardRoute
  '/tcgp/cards/$card': typeof TcgpCardsCardRoute
  '/tcg/cards': typeof TcgCardsIndexRoute
  '/tcgp/cards': typeof TcgpCardsIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/abilities/$ability': typeof AbilitiesAbilityRoute
  '/api/$': typeof ApiSplatRoute
  '/collection/$generation': typeof CollectionGenerationRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/demo/db-chat': typeof DemoDbChatRoute
  '/demo/db-chat-api': typeof DemoDbChatApiRoute
  '/demo/drizzle': typeof DemoDrizzleRoute
  '/demo/neon': typeof DemoNeonRoute
  '/demo/orpc-todo': typeof DemoOrpcTodoRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/items/$item': typeof ItemsItemRoute
  '/moves/$move': typeof MovesMoveRoute
  '/pokemons/$pokemon': typeof PokemonsPokemonRoute
  '/types/$type': typeof TypesTypeRoute
  '/abilities/': typeof AbilitiesIndexRoute
  '/items/': typeof ItemsIndexRoute
  '/moves/': typeof MovesIndexRoute
  '/pokemons/': typeof PokemonsIndexRoute
  '/types/': typeof TypesIndexRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/tcg/cards/$card': typeof TcgCardsCardRoute
  '/tcgp/cards/$card': typeof TcgpCardsCardRoute
  '/tcg/cards/': typeof TcgCardsIndexRoute
  '/tcgp/cards/': typeof TcgpCardsIndexRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/demo/start/ssr/': typeof DemoStartSsrIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/abilities/$ability'
    | '/api/$'
    | '/collection/$generation'
    | '/demo/clerk'
    | '/demo/db-chat'
    | '/demo/db-chat-api'
    | '/demo/drizzle'
    | '/demo/neon'
    | '/demo/orpc-todo'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/items/$item'
    | '/moves/$move'
    | '/pokemons/$pokemon'
    | '/types/$type'
    | '/abilities'
    | '/items'
    | '/moves'
    | '/pokemons'
    | '/types'
    | '/api/rpc/$'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/tcg/cards/$card'
    | '/tcgp/cards/$card'
    | '/tcg/cards'
    | '/tcgp/cards'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/abilities/$ability'
    | '/api/$'
    | '/collection/$generation'
    | '/demo/clerk'
    | '/demo/db-chat'
    | '/demo/db-chat-api'
    | '/demo/drizzle'
    | '/demo/neon'
    | '/demo/orpc-todo'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/items/$item'
    | '/moves/$move'
    | '/pokemons/$pokemon'
    | '/types/$type'
    | '/abilities'
    | '/items'
    | '/moves'
    | '/pokemons'
    | '/types'
    | '/api/rpc/$'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/tcg/cards/$card'
    | '/tcgp/cards/$card'
    | '/tcg/cards'
    | '/tcgp/cards'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr'
  id:
    | '__root__'
    | '/'
    | '/abilities/$ability'
    | '/api/$'
    | '/collection/$generation'
    | '/demo/clerk'
    | '/demo/db-chat'
    | '/demo/db-chat-api'
    | '/demo/drizzle'
    | '/demo/neon'
    | '/demo/orpc-todo'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/items/$item'
    | '/moves/$move'
    | '/pokemons/$pokemon'
    | '/types/$type'
    | '/abilities/'
    | '/items/'
    | '/moves/'
    | '/pokemons/'
    | '/types/'
    | '/api/rpc/$'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/tcg/cards/$card'
    | '/tcgp/cards/$card'
    | '/tcg/cards/'
    | '/tcgp/cards/'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/demo/start/ssr/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AbilitiesAbilityRoute: typeof AbilitiesAbilityRoute
  ApiSplatRoute: typeof ApiSplatRoute
  CollectionGenerationRoute: typeof CollectionGenerationRoute
  DemoClerkRoute: typeof DemoClerkRoute
  DemoDbChatRoute: typeof DemoDbChatRoute
  DemoDbChatApiRoute: typeof DemoDbChatApiRoute
  DemoDrizzleRoute: typeof DemoDrizzleRoute
  DemoNeonRoute: typeof DemoNeonRoute
  DemoOrpcTodoRoute: typeof DemoOrpcTodoRoute
  DemoStoreRoute: typeof DemoStoreRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ItemsItemRoute: typeof ItemsItemRoute
  MovesMoveRoute: typeof MovesMoveRoute
  PokemonsPokemonRoute: typeof PokemonsPokemonRoute
  TypesTypeRoute: typeof TypesTypeRoute
  AbilitiesIndexRoute: typeof AbilitiesIndexRoute
  ItemsIndexRoute: typeof ItemsIndexRoute
  MovesIndexRoute: typeof MovesIndexRoute
  PokemonsIndexRoute: typeof PokemonsIndexRoute
  TypesIndexRoute: typeof TypesIndexRoute
  ApiRpcSplatRoute: typeof ApiRpcSplatRoute
  DemoApiNamesRoute: typeof DemoApiNamesRoute
  DemoApiTqTodosRoute: typeof DemoApiTqTodosRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
  TcgCardsCardRoute: typeof TcgCardsCardRoute
  TcgpCardsCardRoute: typeof TcgpCardsCardRoute
  TcgCardsIndexRoute: typeof TcgCardsIndexRoute
  TcgpCardsIndexRoute: typeof TcgpCardsIndexRoute
  DemoStartSsrDataOnlyRoute: typeof DemoStartSsrDataOnlyRoute
  DemoStartSsrFullSsrRoute: typeof DemoStartSsrFullSsrRoute
  DemoStartSsrSpaModeRoute: typeof DemoStartSsrSpaModeRoute
  DemoStartSsrIndexRoute: typeof DemoStartSsrIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/types/': {
      id: '/types/'
      path: '/types'
      fullPath: '/types'
      preLoaderRoute: typeof TypesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokemons/': {
      id: '/pokemons/'
      path: '/pokemons'
      fullPath: '/pokemons'
      preLoaderRoute: typeof PokemonsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/moves/': {
      id: '/moves/'
      path: '/moves'
      fullPath: '/moves'
      preLoaderRoute: typeof MovesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/items/': {
      id: '/items/'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof ItemsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/abilities/': {
      id: '/abilities/'
      path: '/abilities'
      fullPath: '/abilities'
      preLoaderRoute: typeof AbilitiesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/types/$type': {
      id: '/types/$type'
      path: '/types/$type'
      fullPath: '/types/$type'
      preLoaderRoute: typeof TypesTypeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokemons/$pokemon': {
      id: '/pokemons/$pokemon'
      path: '/pokemons/$pokemon'
      fullPath: '/pokemons/$pokemon'
      preLoaderRoute: typeof PokemonsPokemonRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/moves/$move': {
      id: '/moves/$move'
      path: '/moves/$move'
      fullPath: '/moves/$move'
      preLoaderRoute: typeof MovesMoveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/items/$item': {
      id: '/items/$item'
      path: '/items/$item'
      fullPath: '/items/$item'
      preLoaderRoute: typeof ItemsItemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/orpc-todo': {
      id: '/demo/orpc-todo'
      path: '/demo/orpc-todo'
      fullPath: '/demo/orpc-todo'
      preLoaderRoute: typeof DemoOrpcTodoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/neon': {
      id: '/demo/neon'
      path: '/demo/neon'
      fullPath: '/demo/neon'
      preLoaderRoute: typeof DemoNeonRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/drizzle': {
      id: '/demo/drizzle'
      path: '/demo/drizzle'
      fullPath: '/demo/drizzle'
      preLoaderRoute: typeof DemoDrizzleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/db-chat-api': {
      id: '/demo/db-chat-api'
      path: '/demo/db-chat-api'
      fullPath: '/demo/db-chat-api'
      preLoaderRoute: typeof DemoDbChatApiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/db-chat': {
      id: '/demo/db-chat'
      path: '/demo/db-chat'
      fullPath: '/demo/db-chat'
      preLoaderRoute: typeof DemoDbChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/clerk': {
      id: '/demo/clerk'
      path: '/demo/clerk'
      fullPath: '/demo/clerk'
      preLoaderRoute: typeof DemoClerkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collection/$generation': {
      id: '/collection/$generation'
      path: '/collection/$generation'
      fullPath: '/collection/$generation'
      preLoaderRoute: typeof CollectionGenerationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/abilities/$ability': {
      id: '/abilities/$ability'
      path: '/abilities/$ability'
      fullPath: '/abilities/$ability'
      preLoaderRoute: typeof AbilitiesAbilityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tcgp/cards/': {
      id: '/tcgp/cards/'
      path: '/tcgp/cards'
      fullPath: '/tcgp/cards'
      preLoaderRoute: typeof TcgpCardsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tcg/cards/': {
      id: '/tcg/cards/'
      path: '/tcg/cards'
      fullPath: '/tcg/cards'
      preLoaderRoute: typeof TcgCardsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tcgp/cards/$card': {
      id: '/tcgp/cards/$card'
      path: '/tcgp/cards/$card'
      fullPath: '/tcgp/cards/$card'
      preLoaderRoute: typeof TcgpCardsCardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tcg/cards/$card': {
      id: '/tcg/cards/$card'
      path: '/tcg/cards/$card'
      fullPath: '/tcg/cards/$card'
      preLoaderRoute: typeof TcgCardsCardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/tq-todos': {
      id: '/demo/api/tq-todos'
      path: '/demo/api/tq-todos'
      fullPath: '/demo/api/tq-todos'
      preLoaderRoute: typeof DemoApiTqTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/names': {
      id: '/demo/api/names'
      path: '/demo/api/names'
      fullPath: '/demo/api/names'
      preLoaderRoute: typeof DemoApiNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/rpc/$': {
      id: '/api/rpc/$'
      path: '/api/rpc/$'
      fullPath: '/api/rpc/$'
      preLoaderRoute: typeof ApiRpcSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/': {
      id: '/demo/start/ssr/'
      path: '/demo/start/ssr'
      fullPath: '/demo/start/ssr'
      preLoaderRoute: typeof DemoStartSsrIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/spa-mode': {
      id: '/demo/start/ssr/spa-mode'
      path: '/demo/start/ssr/spa-mode'
      fullPath: '/demo/start/ssr/spa-mode'
      preLoaderRoute: typeof DemoStartSsrSpaModeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/full-ssr': {
      id: '/demo/start/ssr/full-ssr'
      path: '/demo/start/ssr/full-ssr'
      fullPath: '/demo/start/ssr/full-ssr'
      preLoaderRoute: typeof DemoStartSsrFullSsrRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/data-only': {
      id: '/demo/start/ssr/data-only'
      path: '/demo/start/ssr/data-only'
      fullPath: '/demo/start/ssr/data-only'
      preLoaderRoute: typeof DemoStartSsrDataOnlyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AbilitiesAbilityRoute: AbilitiesAbilityRoute,
  ApiSplatRoute: ApiSplatRoute,
  CollectionGenerationRoute: CollectionGenerationRoute,
  DemoClerkRoute: DemoClerkRoute,
  DemoDbChatRoute: DemoDbChatRoute,
  DemoDbChatApiRoute: DemoDbChatApiRoute,
  DemoDrizzleRoute: DemoDrizzleRoute,
  DemoNeonRoute: DemoNeonRoute,
  DemoOrpcTodoRoute: DemoOrpcTodoRoute,
  DemoStoreRoute: DemoStoreRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ItemsItemRoute: ItemsItemRoute,
  MovesMoveRoute: MovesMoveRoute,
  PokemonsPokemonRoute: PokemonsPokemonRoute,
  TypesTypeRoute: TypesTypeRoute,
  AbilitiesIndexRoute: AbilitiesIndexRoute,
  ItemsIndexRoute: ItemsIndexRoute,
  MovesIndexRoute: MovesIndexRoute,
  PokemonsIndexRoute: PokemonsIndexRoute,
  TypesIndexRoute: TypesIndexRoute,
  ApiRpcSplatRoute: ApiRpcSplatRoute,
  DemoApiNamesRoute: DemoApiNamesRoute,
  DemoApiTqTodosRoute: DemoApiTqTodosRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
  TcgCardsCardRoute: TcgCardsCardRoute,
  TcgpCardsCardRoute: TcgpCardsCardRoute,
  TcgCardsIndexRoute: TcgCardsIndexRoute,
  TcgpCardsIndexRoute: TcgpCardsIndexRoute,
  DemoStartSsrDataOnlyRoute: DemoStartSsrDataOnlyRoute,
  DemoStartSsrFullSsrRoute: DemoStartSsrFullSsrRoute,
  DemoStartSsrSpaModeRoute: DemoStartSsrSpaModeRoute,
  DemoStartSsrIndexRoute: DemoStartSsrIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
